{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","onError","Success","console","log","then"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACzBC,MAAAA,EAAgBC,KAAKC,SAAW,GAS/BC,OARU,IAAIC,QAAQ,CAACC,EAASC,KACjCN,EACFK,IAGAC,EAAOC,EAAQ,CAAET,SAAAA,EAAUC,MAAAA,OAKjC,MAAMC,EAAgBC,KAAKC,SAAW,GAC7BC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACjCN,EACFK,IAGAC,EAAOC,EAAQ,CAAET,SAAAA,SAAUC,MAAAA,WAYjC,SAASS,GAAQ,SAAEV,EAAF,MAAYC,IAChBU,OAAAA,QAAQC,2BAA2BZ,QAAeC,OAE/D,SAASQ,GAAQ,SAAET,EAAF,MAAYC,IACrBU,QAAQC,0BAA0BZ,QAAeC,OAGzDI,EAAQQ,KAAKH,EAAQX,EAAc,EAAG","file":"03-promises.89a81ccb.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n   const promise=  new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve()\n\n    } else {\n      reject(onError({ position, delay }))\n    }\n   })\n  return promise\n}\nconst shouldResolve = Math.random() > 0.3;\n   const promise=  new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve()\n\n    } else {\n      reject(onError({ position, delay }))\n    }\n   })\n\n\n//   .then(({ position, delay }) => {\n    \n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\nfunction Success({ position, delay }) {\n     return  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onError({ position, delay }) {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n  \npromise.then(Success(createPromise(2, 1500)))"]}